# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫
from aiogram import types
from aiogram.dispatcher.storage import FSMContext
from config import *
from database import db



async def send_welcome(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    if await db.check_user_exists(user_id):
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω! üõçÔ∏è\n–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

    else:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –æ–Ω–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω! üõçÔ∏è\n–ú—ã –Ω–∞—á–Ω–µ–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à e-mail.")
        await UserRegistration.waiting_for_email.set()



async def send_help(message: types.Message):
    await message.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
                        "\n/start - –ù–∞—á–∞—Ç—å"
                        "\n/help - –ü–æ–º–æ—â—å"
                        "\n/update - –û–±–Ω–æ–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
                        "\n/catalog - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤")